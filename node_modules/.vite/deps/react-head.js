import {
  require_react_dom
} from "./chunk-GJJM2GG4.js";
import {
  __toESM,
  require_react
} from "./chunk-37AZBUIX.js";

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}

// node_modules/react-head/dist/index.esm.js
var import_react = __toESM(require_react());

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (-1 !== e.indexOf(n)) continue;
    t[n] = r[n];
  }
  return t;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
    return t2.__proto__ = e2, t2;
  }, _setPrototypeOf(t, e);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(t, o) {
  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, _setPrototypeOf(t, o);
}

// node_modules/react-head/dist/index.esm.js
var import_react_dom = __toESM(require_react_dom());

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}

// node_modules/react-head/dist/index.esm.js
var _React$createContext = (0, import_react.createContext)(null);
var Consumer = _React$createContext.Consumer;
var Provider = _React$createContext.Provider;
var HeadTag = function(_React$Component) {
  _inheritsLoose(HeadTag2, _React$Component);
  function HeadTag2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      canUseDOM: false
    };
    _this.headTags = null;
    _this.index = -1;
    return _this;
  }
  var _proto = HeadTag2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    var _this$props = this.props, tag = _this$props.tag, name = _this$props.name, property = _this$props.property;
    this.setState({
      canUseDOM: true
    });
    this.index = this.headTags.addClientTag(tag, name || property);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    var tag = this.props.tag;
    this.headTags.removeClientTag(tag, this.index);
  };
  _proto.render = function render() {
    var _this2 = this;
    var _this$props2 = this.props, Tag = _this$props2.tag, rest = _objectWithoutPropertiesLoose(_this$props2, ["tag"]);
    var canUseDOM = this.state.canUseDOM;
    return (0, import_react.createElement)(Consumer, null, function(headTags) {
      if (headTags == null) {
        throw Error("<HeadProvider /> should be in the tree");
      }
      _this2.headTags = headTags;
      if (canUseDOM) {
        if (!headTags.shouldRenderTag(Tag, _this2.index)) {
          return null;
        }
        var ClientComp = (0, import_react.createElement)(Tag, rest);
        return (0, import_react_dom.createPortal)(ClientComp, document.head);
      }
      var ServerComp = (0, import_react.createElement)(Tag, _extends({
        "data-rh": ""
      }, rest));
      headTags.addServerTag(ServerComp);
      return null;
    });
  };
  return HeadTag2;
}(import_react.Component);
var cascadingTags = ["title", "meta"];
var HeadProvider = function(_React$Component) {
  _inheritsLoose(HeadProvider2, _React$Component);
  function HeadProvider2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.indices = /* @__PURE__ */ new Map();
    _this.state = {
      addClientTag: function addClientTag(tag, name) {
        if (cascadingTags.indexOf(tag) !== -1) {
          _this.setState(function(state) {
            var _ref;
            var names = state[tag] || [];
            return _ref = {}, _ref[tag] = [].concat(names, [name]), _ref;
          });
          var _assertThisInitialize = _assertThisInitialized(_this), indices = _assertThisInitialize.indices;
          var index = indices.has(tag) ? indices.get(tag) + 1 : 0;
          indices.set(tag, index);
          return index;
        }
        return -1;
      },
      shouldRenderTag: function shouldRenderTag(tag, index) {
        if (cascadingTags.indexOf(tag) !== -1) {
          var names = _this.state[tag];
          return names && names.lastIndexOf(names[index]) === index;
        }
        return true;
      },
      removeClientTag: function removeClientTag(tag, index) {
        _this.setState(function(state) {
          var names = state[tag];
          if (names) {
            var _ref2;
            names[index] = null;
            return _ref2 = {}, _ref2[tag] = names, _ref2;
          }
          return null;
        });
      },
      addServerTag: function addServerTag(tagNode) {
        var _this$props$headTags = _this.props.headTags, headTags = _this$props$headTags === void 0 ? [] : _this$props$headTags;
        if (cascadingTags.indexOf(tagNode.type) !== -1) {
          var index = headTags.findIndex(function(prev) {
            var prevName = prev.props.name || prev.props.property;
            var nextName = tagNode.props.name || tagNode.props.property;
            return prev.type === tagNode.type && prevName === nextName;
          });
          if (index !== -1) {
            headTags.splice(index, 1);
          }
        }
        headTags.push(tagNode);
      }
    };
    return _this;
  }
  var _proto = HeadProvider2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    var ssrTags = document.head.querySelectorAll('[data-rh=""]');
    Array.prototype.forEach.call(ssrTags, function(ssrTag) {
      return ssrTag.parentNode.removeChild(ssrTag);
    });
  };
  _proto.render = function render() {
    var _this$props = this.props, headTags = _this$props.headTags, children = _this$props.children;
    if (typeof window === "undefined" && Array.isArray(headTags) === false) {
      throw Error("headTags array should be passed to <HeadProvider /> in node");
    }
    return (0, import_react.createElement)(Provider, {
      value: this.state
    }, children);
  };
  return HeadProvider2;
}(import_react.Component);
var Title = function Title2(props) {
  return (0, import_react.createElement)(HeadTag, _extends({
    tag: "title"
  }, props));
};
var Style = function Style2(props) {
  return (0, import_react.createElement)(HeadTag, _extends({
    tag: "style"
  }, props));
};
var Meta = function Meta2(props) {
  return (0, import_react.createElement)(HeadTag, _extends({
    tag: "meta"
  }, props));
};
var Link = function Link2(props) {
  return (0, import_react.createElement)(HeadTag, _extends({
    tag: "link"
  }, props));
};
var Base = function Base2(props) {
  return (0, import_react.createElement)(HeadTag, _extends({
    tag: "base"
  }, props));
};
export {
  Base,
  HeadProvider,
  Link,
  Meta,
  Style,
  Title
};
//# sourceMappingURL=react-head.js.map
